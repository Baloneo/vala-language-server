<?xml version="1.0" encoding="utf-8"?>
<html>
  <head>
    <meta charset="UTF-8"/>
    <title>ccode &ndash; Vala Binding Reference</title>
    <link href="../style.css" rel="stylesheet" type="text/css"/><script src="../scripts.js" type="text/javascript">
    </script>
  </head>
  <body>
    <div class="site_header">ccode Reference Manual</div>
    <div class="site_body">
      <div class="site_navigation">
        <ul class="navi_main">
          <li class="package_index"><a href="../index.html">Packages</a></li>
        </ul>
        <hr class="navi_hr"/>
        <ul class="navi_main">
          <li class="package">ccode</li>
        </ul>
        <hr class="navi_hr"/>
        <ul class="navi_main">
          <li class="namespace"><a href="Vala.html">Vala</a></li>
        </ul>
      </div>
      <div class="site_content">
        <h1 class="main_title" id="ccode">ccode</h1>
        <hr class="main_hr"/>
        <h2 class="main_title">Description:</h2>
        <h2 class="main_title">Content:</h2>
        <h3 class="main_title">Namespaces:</h3>
        <ul class="navi_inline">
          <li class="namespace"><a href="Vala.html">Vala</a></li>
          <h3 class="main_title">Classes:</h3>
          <ul class="navi_inline">
            <li class="abstract_class"><a href="Vala.CCodeDeclarator.html">CCodeDeclarator</a> - <span class="brief_description">Represents a variable
                or function pointer declarator in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeWriter.html">CCodeWriter</a> - <span class="brief_description">Represents a writer to write C source 
                files.</span></li>
            <li class="class"><a href="Vala.CCodeFunctionDeclarator.html">CCodeFunctionDeclarator</a> - <span class="brief_description">Represents a 
                function pointer declarator in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeEmptyStatement.html">CCodeEmptyStatement</a> - <span class="brief_description">Represents an empty 
                statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeMemberAccess.html">CCodeMemberAccess</a> - <span class="brief_description">Represents an access to a 
                struct member in the C code.</span></li>
            <li class="abstract_class"><a href="Vala.CCodeNode.html">CCodeNode</a> - <span class="brief_description">Represents a node in the C code 
                tree.</span></li>
            <li class="class"><a href="Vala.CCodeDoStatement.html">CCodeDoStatement</a> - <span class="brief_description">Represents a do iteration 
                statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeExpressionStatement.html">CCodeExpressionStatement</a> - <span class="brief_description">Represents a
                C code statement that evaluates a given expression.</span></li>
            <li class="class"><a href="Vala.CCodeIdentifier.html">CCodeIdentifier</a> - <span class="brief_description">Represents a identifier in the
                C code.</span></li>
            <li class="class"><a href="Vala.CCodeNewline.html">CCodeNewline</a> - <span class="brief_description">Represents a line break in the C 
                code.</span></li>
            <li class="class"><a href="Vala.CCodeForStatement.html">CCodeForStatement</a> - <span class="brief_description">Represents a for iteration
                statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeCastExpression.html">CCodeCastExpression</a> - <span class="brief_description">Represents a type cast
                in the generated C code.</span></li>
            <li class="abstract_class"><a href="Vala.CCodeExpression.html">CCodeExpression</a> - <span class="brief_description">Represents an 
                expression node in the C code tree.</span></li>
            <li class="class"><a href="Vala.CCodeBreakStatement.html">CCodeBreakStatement</a> - <span class="brief_description">Represents a break 
                statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeElementAccess.html">CCodeElementAccess</a> - <span class="brief_description">Represents an access to 
                an array member in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeFile.html">CCodeFile</a></li>
            <li class="class"><a href="Vala.CCodeFragment.html">CCodeFragment</a> - <span class="brief_description">Represents a container for C code 
                nodes.</span></li>
            <li class="class"><a href="Vala.CCodeInvalidExpression.html">CCodeInvalidExpression</a> - <span class="brief_description">Represents an 
                invalid expression.</span></li>
            <li class="class"><a href="Vala.CCodeParameter.html">CCodeParameter</a> - <span class="brief_description">Represents a formal parameter in
                a C method signature.</span></li>
            <li class="class"><a href="Vala.CCodeOnceSection.html">CCodeOnceSection</a> - <span class="brief_description">Represents a section that 
                should only to processed once.</span></li>
            <li class="class"><a href="Vala.CCodeEnumValue.html">CCodeEnumValue</a> - <span class="brief_description">Represents an enum value in the 
                C code.</span></li>
            <li class="abstract_class"><a href="Vala.CCodeStatement.html">CCodeStatement</a> - <span class="brief_description">Represents a statement 
                in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeBlock.html">CCodeBlock</a> - <span class="brief_description">Represents a C code block.</span></li>
            <li class="class"><a href="Vala.CCodeComment.html">CCodeComment</a> - <span class="brief_description">Represents a comment in the C code.
              </span></li>
            <li class="class"><a href="Vala.CCodeCaseStatement.html">CCodeCaseStatement</a> - <span class="brief_description">Represents a case block 
                in a switch statement in C code.</span></li>
            <li class="class"><a href="Vala.CCodeFunction.html">CCodeFunction</a> - <span class="brief_description">Represents a function declaration 
                in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeFeatureTestMacro.html">CCodeFeatureTestMacro</a> - <span class="brief_description">Represents a 
                feature test macro definition in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeIfStatement.html">CCodeIfStatement</a> - <span class="brief_description">Represents an if selection 
                statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeConstant.html">CCodeConstant</a> - <span class="brief_description">A constant C expression.</span>
            </li>
            <li class="class"><a href="Vala.CCodeMacroReplacement.html">CCodeMacroReplacement</a> - <span class="brief_description">Represents a 
                preprocessor macro replacement definition in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeLineDirective.html">CCodeLineDirective</a> - <span class="brief_description">Represents a line 
                directive in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeFunctionCall.html">CCodeFunctionCall</a> - <span class="brief_description">Represents a function call
                in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeSwitchStatement.html">CCodeSwitchStatement</a> - <span class="brief_description">Represents a switch 
                selection statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeAssignment.html">CCodeAssignment</a> - <span class="brief_description">Represents an assignment 
                expression in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeTypeDefinition.html">CCodeTypeDefinition</a> - <span class="brief_description">Represents a typedef 
                in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeVariableDeclarator.html">CCodeVariableDeclarator</a> - <span class="brief_description">Represents a 
                variable declarator in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeDeclaratorSuffix.html">CCodeDeclaratorSuffix</a></li>
            <li class="class"><a href="Vala.CCodeEnum.html">CCodeEnum</a> - <span class="brief_description">Represents an enum in the C code.</span>
            </li>
            <li class="class"><a href="Vala.CCodeCommaExpression.html">CCodeCommaExpression</a> - <span class="brief_description">Represents a comma 
                separated expression list in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeParenthesizedExpression.html">CCodeParenthesizedExpression</a> - <span class="brief_description">
                Represents a parenthesized expression in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeUnaryExpression.html">CCodeUnaryExpression</a> - <span class="brief_description">Represents an 
                expression with one operand in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeContinueStatement.html">CCodeContinueStatement</a> - <span class="brief_description">Represents a 
                continue statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeWhileStatement.html">CCodeWhileStatement</a> - <span class="brief_description">Represents a while 
                iteration statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeGotoStatement.html">CCodeGotoStatement</a> - <span class="brief_description">Represents a goto 
                statement in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeIncludeDirective.html">CCodeIncludeDirective</a> - <span class="brief_description">Represents an 
                include preprocessor directive in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeDeclaration.html">CCodeDeclaration</a> - <span class="brief_description">Represents a local variable 
                declaration in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeInitializerList.html">CCodeInitializerList</a> - <span class="brief_description">Represents a struct 
                or array initializer list in the C code.</span></li>
            <li class="class"><a href="Vala.CCodeLabel.html">CCodeLabel</a> - <span class="brief_description">Represents a label declaration in the C 
                code.</span></li>
            <li class="class"><a href="Vala.CCodeStruct.html">CCodeStruct</a> - <span class="brief_description">Represents a struct declaration in the
                C code.</span></li>
            <li class="class"><a href="Vala.CCodeGGnucSection.html">CCodeGGnucSection</a> - <span class="brief_description">Represents a section that 
                should be processed on condition.</span></li>
            <li class="class"><a href="Vala.CCodeConditionalExpression.html">CCodeConditionalExpression</a> - <span class="brief_description">
                Represents a conditional expression in C code.</span></li>
            <li class="class"><a href="Vala.CCodeIfSection.html">CCodeIfSection</a> - <span class="brief_description">Represents a section that should
                be processed on condition.</span></li>
            <li class="class"><a href="Vala.CCodeBinaryExpression.html">CCodeBinaryExpression</a> - <span class="brief_description">Represents an 
                expression with two operands in C code.</span></li>
            <li class="class"><a href="Vala.CCodeReturnStatement.html">CCodeReturnStatement</a> - <span class="brief_description">Represents a return 
                statement in the C code.</span></li>
          </ul>
          <h3 class="main_title">Enums:</h3>
          <ul class="navi_inline">
            <li class="enum"><a href="Vala.CCodeModifiers.html">CCodeModifiers</a></li>
            <li class="enum"><a href="Vala.CCodeAssignmentOperator.html">CCodeAssignmentOperator</a></li>
            <li class="enum"><a href="Vala.CCodeUnaryOperator.html">CCodeUnaryOperator</a></li>
            <li class="enum"><a href="Vala.GGnucSectionType.html">GGnucSectionType</a></li>
            <li class="enum"><a href="Vala.CCodeBinaryOperator.html">CCodeBinaryOperator</a></li>
          </ul>
        </ul>
      </div>
    </div><br/>
    <div class="site_footer">Generated by <a href="http://www.valadoc.org/">Valadoc</a>
    </div>
  </body>
</html>